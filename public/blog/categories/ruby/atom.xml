<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | A Tidey Blog]]></title>
  <link href="http://blog.tidey.net//blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://blog.tidey.net//"/>
  <updated>2012-12-22T01:30:37+00:00</updated>
  <id>http://blog.tidey.net//</id>
  <author>
    <name><![CDATA[Geoff Tidey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SHRD : A ruby interpretation of the Double Precision Shift Right Assembly instruction]]></title>
    <link href="http://blog.tidey.net//blog/2012/07/31/shrd-a-ruby-interpretation-of-the-double-precision-shift-right-assembly-instruction/"/>
    <updated>2012-07-31T20:43:00+01:00</updated>
    <id>http://blog.tidey.net//blog/2012/07/31/shrd-a-ruby-interpretation-of-the-double-precision-shift-right-assembly-instruction</id>
    <content type="html"><![CDATA[<p>Following on from my <a href="http://blog.tidey.net/blog/2012/06/07/really-controlling-the-flow-from-assembly-to-ruby/">last post on Assembly conversion</a>, I also came across the SHRD instruction.</p>

<p>I already knew about the SHR &amp; SHL command, logical shift right &amp; left respectively, which translates rather easily:</p>

<table>
  <tr>
    <th>Assembly</th><th>Ruby</th>
  </tr>
  <tr>
    <td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="nf">shr</span> <span class="err">@</span><span class="nb">ax</span><span class="p">,</span> <span class="mi">5</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td><td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@ax</span> <span class="o">&gt;&gt;=</span> <span class="mi">5</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td>
  </tr>
  <tr>
    <td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="nf">shl</span> <span class="err">@</span><span class="nb">ax</span><span class="p">,</span> <span class="mi">5</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td><td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@ax</span> <span class="o">&lt;&lt;=</span> <span class="mi">5</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td>
  </tr>
 </table>


<p>But I was initially stumped when I saw <div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="nf">shrd</span> <span class="nb">ax</span><span class="p">,</span> <span class="nb">dl</span><span class="p">,</span> <span class="nb">cl</span>
</span></code></pre></td></tr></table></div></figure></notextile></div> in the Assembly code listing.</p>

<p>I'd figured out I needed the following test data, from the debugger</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">test_shrd</span>
</span><span class='line'>  <span class="n">assert_equal</span> <span class="mi">12927</span><span class="p">,</span> <span class="n">shrd</span><span class="p">(</span><span class="mi">40919</span><span class="p">,</span> <span class="mi">140</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And then this <a href="https://en.wikibooks.org/wiki/X86_Assembly/Shift_and_Rotate#Extended_Shift_Instructions">link</a> gave me the insight I needed to code it up.</p>

<p>Voila:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;see https:/</span><span class="o">/</span><span class="n">en</span><span class="o">.</span><span class="n">wikibooks</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">wiki</span><span class="o">/</span><span class="no">X86_Assembly</span><span class="o">/</span><span class="no">Shift_and_Rotate</span><span class="c1">#Extended_Shift_Instructions for more info on shrd&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">shrd</span><span class="p">(</span><span class="n">rm16</span><span class="p">,</span> <span class="n">r16</span><span class="p">,</span> <span class="n">cl</span><span class="p">)</span>
</span><span class='line'>  <span class="n">rm16</span> <span class="o">&gt;&gt;=</span> <span class="n">cl</span>
</span><span class='line'>  <span class="n">r16</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="p">(</span><span class="mi">16</span> <span class="o">-</span> <span class="n">cl</span><span class="p">)</span>
</span><span class='line'>  <span class="n">rm16</span> <span class="o">|</span> <span class="p">(</span><span class="n">r16</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="mh">0xFFFF</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The test went from red to green :)</p>

<p>"<a href="http://www.artima.com/intv/ruby4.html">They will not control us</a>.  We will be victourious!!!!!!"</p>

<p><iframe width="640" height="510" src="http://www.youtube.com/embed/n2I3_196BpI " frameborder="0" allowfullscreen></iframe></p>

<p>:D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Really Controlling the flow: from Assembly to Ruby]]></title>
    <link href="http://blog.tidey.net//blog/2012/06/07/really-controlling-the-flow-from-assembly-to-ruby/"/>
    <updated>2012-06-07T13:37:00+01:00</updated>
    <id>http://blog.tidey.net//blog/2012/06/07/really-controlling-the-flow-from-assembly-to-ruby</id>
    <content type="html"><![CDATA[<p>I've recently been converting a bunch of <a href="http://www.cs.virginia.edu/~evans/cs216/guides/x86.html">Assembly</a> code into Ruby.  ZOMG Why, Why, Why?  You may well ask.  Well the Assembly code is <a href="http://en.wikipedia.org/wiki/X86_assembly_language">Intel x86 flavoured</a>, it's never been run on Linux &amp; we want to run on Linux.  I could have converted to C, but everyone in my current team writes Ruby, and most importantly Ruby allows me (and you) to control the machine, rather than the other way around.  <a href="http://www.artima.com/intv/ruby4.html">We are the masters. They are the slaves!</a></p>

<p>My main issue with the conversion was figuring out what the JMP type conditional commands equivalent was in Ruby.  From my 2 minutes of google searching I found there doesn't seem to be a resource on the web that has a simple quick reference.</p>

<p>So without further ado, here's my first stab at an Intel x86 Assembly to Ruby for JMP commands cheatsheet.</p>

<table>
  <tr><td colspan='2'> (<i> Given there is a function/method called <b>func0</b> &amp; a register/variable named <b>al</b> </i>)
</td></tr>
  <tr>
    <th>Assembly</th><th>Ruby</th>
  </tr>
  <tr>
    <td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="nf">jmp</span> <span class="nv">func0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td><td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">func0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td>
  </tr>
  <tr>
    <td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="nf">cmp</span> <span class="nb">al</span><span class="p">,</span> <span class="mh">07Bh</span>
</span><span class='line'><span class="nf">jc</span> <span class="nv">func0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td><td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">func0</span> <span class="k">unless</span> <span class="n">al</span> <span class="o">-</span> <span class="mh">0x7B</span> <span class="o">&gt;=</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td>
  </tr>
  <tr>
    <td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="nf">cmp</span> <span class="nb">al</span><span class="p">,</span> <span class="mh">07Bh</span>
</span><span class='line'><span class="nf">jnc</span> <span class="nv">func0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td><td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">func0</span> <span class="k">if</span> <span class="n">al</span> <span class="o">-</span> <span class="mh">0x7B</span> <span class="o">&gt;=</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td>
  </tr>
  <tr>
    <td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="nf">cmp</span> <span class="nb">al</span><span class="p">,</span> <span class="mh">07Bh</span>
</span><span class='line'><span class="nf">jnz</span> <span class="nv">func0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td><td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">func0</span> <span class="k">unless</span> <span class="n">al</span> <span class="o">-</span> <span class="mh">0x7B</span> <span class="o">==</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td>
  </tr>
  <tr>
    <td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="nf">cmp</span> <span class="nb">al</span><span class="p">,</span> <span class="mh">07Bh</span>
</span><span class='line'><span class="nf">jz</span> <span class="nv">func0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td><td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">func0</span> <span class="k">if</span> <span class="n">al</span> <span class="o">-</span> <span class="mh">0x7B</span> <span class="o">==</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td>
  </tr>
  <tr>
    <td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="nf">test</span> <span class="nb">al</span><span class="p">,</span> <span class="mh">07Bh</span>
</span><span class='line'><span class="nf">jnz</span> <span class="nv">func0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td><td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">func0</span> <span class="k">unless</span> <span class="n">al</span> <span class="o">&amp;</span> <span class="mh">0x7B</span> <span class="o">==</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td>
  </tr>
 <tr>
    <td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="nf">test</span> <span class="nb">al</span><span class="p">,</span> <span class="mh">07Bh</span>
</span><span class='line'><span class="nf">jz</span> <span class="nv">func0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td><td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">func0</span> <span class="k">if</span> <span class="n">al</span> <span class="o">&amp;</span> <span class="mh">0x7B</span> <span class="o">==</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td>
  </tr>
  <tr>
    <td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="nf">and</span> <span class="nb">al</span><span class="p">,</span> <span class="mh">07Bh</span>
</span><span class='line'><span class="nf">jnz</span> <span class="nv">func0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td><td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">func0</span> <span class="k">unless</span> <span class="n">al</span> <span class="o">&amp;=</span> <span class="mh">0x7B</span> <span class="o">==</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td>
  </tr>
 <tr>
    <td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="nf">and</span> <span class="nb">al</span><span class="p">,</span> <span class="mh">07Bh</span>
</span><span class='line'><span class="nf">jz</span> <span class="nv">func0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td><td><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">func0</span> <span class="k">if</span> <span class="n">al</span> <span class="o">&amp;=</span> <span class="mh">0x7B</span> <span class="o">==</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></td>
  </tr>
 </table>


<p>If you see a mistake, have a query or a suggestion to update or just found this useful, please let me know.</p>
]]></content>
  </entry>
  
</feed>
